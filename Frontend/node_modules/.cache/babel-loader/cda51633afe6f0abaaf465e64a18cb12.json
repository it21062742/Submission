{"ast":null,"code":"import { microTask as s } from './micro-task.js';\n\nfunction m() {\n  let n = [],\n      i = [],\n      r = {\n    enqueue(e) {\n      i.push(e);\n    },\n\n    addEventListener(e, t, a, o) {\n      return e.addEventListener(t, a, o), r.add(() => e.removeEventListener(t, a, o));\n    },\n\n    requestAnimationFrame() {\n      let t = requestAnimationFrame(...arguments);\n      return r.add(() => cancelAnimationFrame(t));\n    },\n\n    nextFrame() {\n      for (var _len = arguments.length, e = new Array(_len), _key = 0; _key < _len; _key++) {\n        e[_key] = arguments[_key];\n      }\n\n      return r.requestAnimationFrame(() => r.requestAnimationFrame(...e));\n    },\n\n    setTimeout() {\n      let t = setTimeout(...arguments);\n      return r.add(() => clearTimeout(t));\n    },\n\n    microTask() {\n      for (var _len2 = arguments.length, e = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        e[_key2] = arguments[_key2];\n      }\n\n      let t = {\n        current: !0\n      };\n      return s(() => {\n        t.current && e[0]();\n      }), r.add(() => {\n        t.current = !1;\n      });\n    },\n\n    add(e) {\n      return n.push(e), () => {\n        let t = n.indexOf(e);\n\n        if (t >= 0) {\n          let [a] = n.splice(t, 1);\n          a();\n        }\n      };\n    },\n\n    dispose() {\n      for (let e of n.splice(0)) e();\n    },\n\n    async workQueue() {\n      for (let e of i.splice(0)) await e();\n    }\n\n  };\n  return r;\n}\n\nexport { m as disposables };","map":{"version":3,"sources":["C:/MERN test/submission test/This Is what im submitting/Frontend/node_modules/@headlessui/react/dist/utils/disposables.js"],"names":["microTask","s","m","n","i","r","enqueue","e","push","addEventListener","t","a","o","add","removeEventListener","requestAnimationFrame","cancelAnimationFrame","nextFrame","setTimeout","clearTimeout","current","indexOf","splice","dispose","workQueue","disposables"],"mappings":"AAAA,SAAOA,SAAS,IAAIC,CAApB,QAA0B,iBAA1B;;AAA4C,SAASC,CAAT,GAAY;AAAC,MAAIC,CAAC,GAAC,EAAN;AAAA,MAASC,CAAC,GAAC,EAAX;AAAA,MAAcC,CAAC,GAAC;AAACC,IAAAA,OAAO,CAACC,CAAD,EAAG;AAACH,MAAAA,CAAC,CAACI,IAAF,CAAOD,CAAP;AAAU,KAAtB;;AAAuBE,IAAAA,gBAAgB,CAACF,CAAD,EAAGG,CAAH,EAAKC,CAAL,EAAOC,CAAP,EAAS;AAAC,aAAOL,CAAC,CAACE,gBAAF,CAAmBC,CAAnB,EAAqBC,CAArB,EAAuBC,CAAvB,GAA0BP,CAAC,CAACQ,GAAF,CAAM,MAAIN,CAAC,CAACO,mBAAF,CAAsBJ,CAAtB,EAAwBC,CAAxB,EAA0BC,CAA1B,CAAV,CAAjC;AAAyE,KAA1H;;AAA2HG,IAAAA,qBAAqB,GAAM;AAAC,UAAIL,CAAC,GAACK,qBAAqB,CAAC,YAAD,CAA3B;AAAkC,aAAOV,CAAC,CAACQ,GAAF,CAAM,MAAIG,oBAAoB,CAACN,CAAD,CAA9B,CAAP;AAA0C,KAAnO;;AAAoOO,IAAAA,SAAS,GAAM;AAAA,wCAAFV,CAAE;AAAFA,QAAAA,CAAE;AAAA;;AAAC,aAAOF,CAAC,CAACU,qBAAF,CAAwB,MAAIV,CAAC,CAACU,qBAAF,CAAwB,GAAGR,CAA3B,CAA5B,CAAP;AAAkE,KAAtT;;AAAuTW,IAAAA,UAAU,GAAM;AAAC,UAAIR,CAAC,GAACQ,UAAU,CAAC,YAAD,CAAhB;AAAuB,aAAOb,CAAC,CAACQ,GAAF,CAAM,MAAIM,YAAY,CAACT,CAAD,CAAtB,CAAP;AAAkC,KAAjY;;AAAkYV,IAAAA,SAAS,GAAM;AAAA,yCAAFO,CAAE;AAAFA,QAAAA,CAAE;AAAA;;AAAC,UAAIG,CAAC,GAAC;AAACU,QAAAA,OAAO,EAAC,CAAC;AAAV,OAAN;AAAmB,aAAOnB,CAAC,CAAC,MAAI;AAACS,QAAAA,CAAC,CAACU,OAAF,IAAWb,CAAC,CAAC,CAAD,CAAD,EAAX;AAAkB,OAAxB,CAAD,EAA2BF,CAAC,CAACQ,GAAF,CAAM,MAAI;AAACH,QAAAA,CAAC,CAACU,OAAF,GAAU,CAAC,CAAX;AAAa,OAAxB,CAAlC;AAA4D,KAAje;;AAAkeP,IAAAA,GAAG,CAACN,CAAD,EAAG;AAAC,aAAOJ,CAAC,CAACK,IAAF,CAAOD,CAAP,GAAU,MAAI;AAAC,YAAIG,CAAC,GAACP,CAAC,CAACkB,OAAF,CAAUd,CAAV,CAAN;;AAAmB,YAAGG,CAAC,IAAE,CAAN,EAAQ;AAAC,cAAG,CAACC,CAAD,IAAIR,CAAC,CAACmB,MAAF,CAASZ,CAAT,EAAW,CAAX,CAAP;AAAqBC,UAAAA,CAAC;AAAG;AAAC,OAA5E;AAA6E,KAAtjB;;AAAujBY,IAAAA,OAAO,GAAE;AAAC,WAAI,IAAIhB,CAAR,IAAaJ,CAAC,CAACmB,MAAF,CAAS,CAAT,CAAb,EAAyBf,CAAC;AAAG,KAA9lB;;AAA+lB,UAAMiB,SAAN,GAAiB;AAAC,WAAI,IAAIjB,CAAR,IAAaH,CAAC,CAACkB,MAAF,CAAS,CAAT,CAAb,EAAyB,MAAMf,CAAC,EAAP;AAAU;;AAAppB,GAAhB;AAAsqB,SAAOF,CAAP;AAAS;;AAAA,SAAOH,CAAC,IAAIuB,WAAZ","sourcesContent":["import{microTask as s}from'./micro-task.js';function m(){let n=[],i=[],r={enqueue(e){i.push(e)},addEventListener(e,t,a,o){return e.addEventListener(t,a,o),r.add(()=>e.removeEventListener(t,a,o))},requestAnimationFrame(...e){let t=requestAnimationFrame(...e);return r.add(()=>cancelAnimationFrame(t))},nextFrame(...e){return r.requestAnimationFrame(()=>r.requestAnimationFrame(...e))},setTimeout(...e){let t=setTimeout(...e);return r.add(()=>clearTimeout(t))},microTask(...e){let t={current:!0};return s(()=>{t.current&&e[0]()}),r.add(()=>{t.current=!1})},add(e){return n.push(e),()=>{let t=n.indexOf(e);if(t>=0){let[a]=n.splice(t,1);a()}}},dispose(){for(let e of n.splice(0))e()},async workQueue(){for(let e of i.splice(0))await e()}};return r}export{m as disposables};\n"]},"metadata":{},"sourceType":"module"}