{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayushka Weerasinghe\\\\Desktop\\\\Submission\\\\Frontend\\\\src\\\\Admin\\\\components\\\\StatusBar.js\",\n    _s = $RefreshSig$();\n\nimport useGlobalContext from \"../../context/index\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StatusBar() {\n  _s();\n\n  const [time, setTime] = useState();\n  const {\n    Exited,\n    MockDate,\n    ParkingSlots\n  } = useGlobalContext();\n  const [exited, setExited] = Exited;\n  const [mockDate, setMockDate] = MockDate;\n  const [parkingSlots] = ParkingSlots;\n  const [tab, setTab] = useState(\"Parked\");\n  const returnExpiration = exited.map(e => Math.abs((mockDate ? new Date(mockDate) : new Date()) - new Date(e.exit)) / 36e5);\n  useEffect(() => {\n    setInterval(() => {\n      setTime(new Date().toLocaleString());\n    }, 1000);\n  }, [exited]);\n  useEffect(() => {\n    if (returnExpiration.some(T => T >= 1)) {\n      setExited(E => E.filter(e => Math.abs((mockDate ? new Date(mockDate) : new Date()) - new Date(e.exit)) / 365 < 1));\n    }\n  }, [returnExpiration, setExited, mockDate]);\n  const parked = parkingSlots.filter(p => p.occupied);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed right-0 top-15 p-4 grid gap-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Time : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Pick a date :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          className: \"text-black cursor-pointer\",\n          value: mockDate || \"\",\n          onChange: e => setMockDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 w-60 ml-auto bg-blue-700 border-2 border-black p-1 gap-1\",\n        children: [\"Parked\", \"Exited\"].map(T => /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setTab(T),\n          className: `${tab === T && \"bg-blue-400 text-black\"} hover:bg-blue-300 hover:text-black cursor-pointer text-center`,\n          children: T\n        }, T, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), tab === \"Parked\" ? parked === null || parked === void 0 ? void 0 : parked.map(e => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [e.occupied, \"-\", new Date(e.entry).toLocaleString()]\n      }, e.occupied, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)) : exited === null || exited === void 0 ? void 0 : exited.map(e => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [e.plate, \"-\", new Date(e.exit).toLocaleString()]\n      }, e.plate, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StatusBar, \"ICNpNwqeswfC19ii6illAnlAplE=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = StatusBar;\nexport default StatusBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusBar\");","map":{"version":3,"sources":["C:/Users/Ayushka Weerasinghe/Desktop/Submission/Frontend/src/Admin/components/StatusBar.js"],"names":["useGlobalContext","React","useEffect","useState","StatusBar","time","setTime","Exited","MockDate","ParkingSlots","exited","setExited","mockDate","setMockDate","parkingSlots","tab","setTab","returnExpiration","map","e","Math","abs","Date","exit","setInterval","toLocaleString","some","T","E","filter","parked","p","occupied","target","value","entry","plate"],"mappings":"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","sourcesContent":["import useGlobalContext from \"../../context/index\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction StatusBar() {\r\n  const [time, setTime] = useState();\r\n  const { Exited, MockDate, ParkingSlots } = useGlobalContext();\r\n  const [exited, setExited] = Exited;\r\n  const [mockDate, setMockDate] = MockDate;\r\n  const [parkingSlots] = ParkingSlots;\r\n  const [tab, setTab] = useState(\"Parked\");\r\n\r\n  const returnExpiration = exited.map(\r\n    (e) =>\r\n      Math.abs(\r\n        (mockDate ? new Date(mockDate) : new Date()) - new Date(e.exit)\r\n      ) / 36e5\r\n  );\r\n\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setTime(new Date().toLocaleString());\r\n    }, 1000);\r\n  }, [exited]);\r\n\r\n  useEffect(() => {\r\n    if (returnExpiration.some((T) => T >= 1)) {\r\n      setExited((E) =>\r\n        E.filter(\r\n          (e) =>\r\n            Math.abs((mockDate ? new Date(mockDate) : new Date()) - new Date(e.exit)) / 365 < 1\r\n        )\r\n      );\r\n    }\r\n  }, [returnExpiration, setExited, mockDate]);\r\n\r\n  const parked = parkingSlots.filter((p) => p.occupied);\r\n\r\n  return (\r\n    <div className=\"fixed right-0 top-15 p-4 grid gap-2\">\r\n      <div className=\"flex justify-between\">\r\n        <span>Time : </span>\r\n        <span>{time}</span>\r\n      </div>\r\n      <div className=\"flex justify-between gap-4\">\r\n        <span>Pick a date :</span>\r\n        <span>\r\n          <input\r\n            type=\"datetime-local\"\r\n            className=\"text-black cursor-pointer\"\r\n            value={mockDate || \"\"}\r\n            onChange={(e) => setMockDate(e.target.value)}\r\n          />\r\n        </span>\r\n      </div>\r\n      <div className=\"text-right\">\r\n\r\n        <div className=\"grid grid-cols-2 w-60 ml-auto bg-blue-700 border-2 border-black p-1 gap-1\">\r\n          {[\"Parked\", \"Exited\"].map((T) => (\r\n            <span\r\n              key={T}\r\n              onClick={() => setTab(T)}\r\n              className={`${\r\n                tab === T && \"bg-blue-400 text-black\"\r\n              } hover:bg-blue-300 hover:text-black cursor-pointer text-center`}\r\n            >\r\n              {T}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        {tab === \"Parked\"\r\n          ? parked?.map((e) => (\r\n              <p key={e.occupied}>\r\n                {e.occupied}-{new Date(e.entry).toLocaleString()}\r\n              </p>\r\n            ))\r\n          : exited?.map((e) => (\r\n              <p key={e.plate}>\r\n                {e.plate}-{new Date(e.exit).toLocaleString()}\r\n              </p>\r\n            ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatusBar;\r\n"]},"metadata":{},"sourceType":"module"}