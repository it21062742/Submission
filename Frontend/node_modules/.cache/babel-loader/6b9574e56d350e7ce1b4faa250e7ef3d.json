{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayushka Weerasinghe\\\\Desktop\\\\Submission\\\\Frontend\\\\src\\\\ParkingManagement\\\\context\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { v4 as id } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport function GlobalContextWrapper(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const storage = JSON.parse(localStorage.getItem(\"ParkingLotState\"));\n  const initialEntrancesState = [{\n    id: id(),\n    defaultPosition: {\n      x: 100,\n      y: 250\n    }\n  }];\n  const initialParkingSlotsState = [{\n    id: id(),\n    defaultPosition: {\n      x: 300,\n      y: 100\n    },\n    size: \"Bike\"\n  }, {\n    id: id(),\n    defaultPosition: {\n      x: 500,\n      y: 100\n    },\n    size: \"Car\"\n  }, {\n    id: id(),\n    defaultPosition: {\n      x: 700,\n      y: 100\n    },\n    size: \"Van\"\n  }];\n  const [entrances, setEntrances] = useState((storage === null || storage === void 0 ? void 0 : storage.Entrances) || initialEntrancesState);\n  const [parkingSlots, setParkingSlots] = useState((storage === null || storage === void 0 ? void 0 : storage.ParkingSlots) || initialParkingSlotsState);\n  const [exited, setExited] = useState((storage === null || storage === void 0 ? void 0 : storage.Exited) || []);\n  const [editing, setEditing] = useState(false);\n  const [forManaging, setForManaging] = useState({});\n  const [notification, setNotification] = useState({});\n  const [mockDate, setMockDate] = useState(null);\n  useEffect(() => {\n    localStorage.setItem(\"ParkingLotState\", JSON.stringify({\n      ParkingSlots: parkingSlots,\n      Entrances: entrances,\n      Exited: exited\n    }));\n  }, [parkingSlots, entrances, exited]);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      ParkingSlots: [parkingSlots, setParkingSlots],\n      Entrances: [entrances, setEntrances],\n      ForManaging: [forManaging, setForManaging],\n      Editing: [editing, setEditing],\n      Exited: [exited, setExited],\n      Notification: [notification, setNotification],\n      MockDate: [mockDate, setMockDate]\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GlobalContextWrapper, \"DG0druXL/1XyPRDKEyzu+mCmzWw=\");\n\n_c = GlobalContextWrapper;\nexport default function useGlobalContext() {\n  _s2();\n\n  return useContext(GlobalContext);\n}\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalContextWrapper\");","map":{"version":3,"sources":["C:/Users/Ayushka Weerasinghe/Desktop/Submission/Frontend/src/ParkingManagement/context/index.js"],"names":["React","useState","useContext","useEffect","v4","id","GlobalContext","createContext","GlobalContextWrapper","children","storage","JSON","parse","localStorage","getItem","initialEntrancesState","defaultPosition","x","y","initialParkingSlotsState","size","entrances","setEntrances","Entrances","parkingSlots","setParkingSlots","ParkingSlots","exited","setExited","Exited","editing","setEditing","forManaging","setForManaging","notification","setNotification","mockDate","setMockDate","setItem","stringify","ForManaging","Editing","Notification","MockDate","useGlobalContext"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { v4 as id } from \"uuid\";\r\n\r\nconst GlobalContext = React.createContext();\r\n\r\nexport function GlobalContextWrapper({ children }) {\r\n  const storage = JSON.parse(localStorage.getItem(\"ParkingLotState\"));\r\n\r\n  const initialEntrancesState = [\r\n    { id: id(), defaultPosition: { x: 100, y: 250 } },\r\n\r\n  ];\r\n  const initialParkingSlotsState = [\r\n    { id: id(), defaultPosition: { x: 300, y: 100 }, size: \"Bike\" },\r\n    { id: id(), defaultPosition: { x: 500, y: 100 }, size: \"Car\" },\r\n    { id: id(), defaultPosition: { x: 700, y: 100 }, size: \"Van\" },\r\n\r\n  ];\r\n\r\n  const [entrances, setEntrances] = useState(\r\n    storage?.Entrances || initialEntrancesState\r\n  );\r\n  const [parkingSlots, setParkingSlots] = useState(\r\n    storage?.ParkingSlots || initialParkingSlotsState\r\n  );\r\n  const [exited, setExited] = useState(storage?.Exited || []);\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const [forManaging, setForManaging] = useState({});\r\n  const [notification, setNotification] = useState({});\r\n  const [mockDate, setMockDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      \"ParkingLotState\",\r\n      JSON.stringify({\r\n        ParkingSlots: parkingSlots,\r\n        Entrances: entrances,\r\n        Exited: exited,\r\n      })\r\n    );\r\n  }, [parkingSlots, entrances, exited]);\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        ParkingSlots: [parkingSlots, setParkingSlots],\r\n        Entrances: [entrances, setEntrances],\r\n        ForManaging: [forManaging, setForManaging],\r\n        Editing: [editing, setEditing],\r\n        Exited: [exited, setExited],\r\n        Notification: [notification, setNotification],\r\n        MockDate: [mockDate, setMockDate],\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n\r\nexport default function useGlobalContext() {\r\n  return useContext(GlobalContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}